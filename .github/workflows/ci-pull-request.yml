name: "[Etapa 1] Pull Request" 

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  # 1. Build e Testes
  build-and-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restaurar dependências
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Rodar Testes
        run: dotnet test --configuration Release --no-build --verbosity normal
  
  # 2. Análise SonarQube
  sonarqube-analysis:
    runs-on: ubuntu-latest
    needs: build-and-tests
    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Executar Análise SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} 
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet sonarscanner begin \
            /k:"mana-food_mana-food-microsservice-produto" \
            /o:"mana-food" \
            /d:sonar.host.url="$SONAR_HOST_URL" \
            /d:sonar.login="$SONAR_TOKEN" \
            /d:sonar.branch.name="main" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.dll,**/*.exe" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          dotnet build --no-incremental
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
